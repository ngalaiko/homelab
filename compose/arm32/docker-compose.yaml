version: '3.4'

networks:
    traefik:
        driver: overlay

volumes:
  consul-data:

services:
    proxy:
        image: ngalayko/proxy:arm32v7
        command:
            - "--logLevel=DEBUG"
            - "--api"
            - "--api.dashboard=true"
            - "--entrypoints=Name:http Address::80"
            - "--entrypoints=Name:https Address::443 TLS Compress:true TLS.MinVersion:VersionTLS12 TLS.CipherSuites:TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
            - "--defaultentrypoints=http,https"
            - "--acme"
            - "--acme.storage=traefik/acme/account"
            - "--acme.dnsChallenge.provider=digitalocean"
            - "--acme.dnsChallenge.delayBeforeCheck=0"
            - "--acme.entryPoint=https"
            - "--acme.OnHostRule=true"
            - "--acme.acmeLogging=true"
            - "--acme.email=ngalayko@gmail.com"
            - "--docker"
            - "--docker.domain=galayko.rocks"
            - "--docker.watch=true"
            - "--docker.swarmmode=true"
            - "--metrics"
            - "--metrics.prometheus"
            - "--metrics.prometheus.entrypoint=traefik"
            - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
            - "--accessLog"
            - "--accessLog.filePath=/var/log/traefik/access.log"
            - "--consul"
            - "--consul.watch=true"
            - "--consul.endpoint=consul:8500"
            - "--consul.prefix=traefik"
        depends_on:
            - consul
        ports:
            - 80:80
            - 443:443
            - 8090:8080
        environment:
            - DO_AUTH_TOKEN=${DIGITAL_OCEAN_AUTH_TOKEN}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /data/stats:/var
        networks:
            - traefik
            - monitoring
        deploy:
            mode: global
            placement:
                constraints: 
                    - "node.role==manager" 
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s

    consul:
        image: arm32v6/consul:1.3.0
        command: agent -server -bootstrap-expect=1
        volumes:
            - consul-data:/consul/data
        environment:
            - CONSUL_LOCAL_CONFIG={"server":true}
            - CONSUL_BIND_INTERFACE=eth0
            - CONSUL_CLIENT_INTERFACE=eth0
        networks:
            - traefik
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role == manager
            restart_policy:
                condition: on-failure

    dyn-dns:
        image: ngalayko/dyn-dns:arm32v7
        command: --apiToken=${DYN_DNS_TOKEN} --domain="${HOST}" --interval=10m
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    goaccess:
        image: ngalayko/goaccess:arm32v7
        volumes:
            - /data/stats:/srv
            - /data/stats/log:/srv/log
            - /data/stats/certs:/srv/data/certs
        networks:
            - traefik
        ports:
            - 8443:443
        deploy:
            replicas: 1
            placement:
                constraints:
                    - "node.role==manager"
                    - "node.labels.blog==true"
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.port=443"
                - "traefik.docker.network=server_traefik"
                - "traefik.frontend.rule=Host:ws.stats.${HOST}"

    goaccess-front:
        image: ngalayko/nginx:arm32v7
        volumes:
            - /data/stats/report:/usr/share/nginx/html:ro
        networks:
            - traefik
        deploy:
            replicas: 1
            placement:
                constraints:
                    - "node.role==manager"
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.port=80"
                - "traefik.docker.network=server_traefik"
                - "traefik.frontend.rule=Host:stats.${HOST}"
